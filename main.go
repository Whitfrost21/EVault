package main

import (
	"fyne.io/fyne/v2"
	"fyne.io/fyne/v2/app"
	"fyne.io/fyne/v2/container"
	"fyne.io/fyne/v2/theme"
	"fyne.io/fyne/v2/widget"
	"github.com/Whitfrost21/EVault/dashboard"
	"github.com/Whitfrost21/EVault/dashboard/mapview"
	"github.com/Whitfrost21/EVault/evault"
	"github.com/Whitfrost21/EVault/login"
	"github.com/Whitfrost21/EVault/managereq"
	"github.com/Whitfrost21/EVault/notifymesg"
	"github.com/Whitfrost21/EVault/settings"
)

var notifiybut fyne.Widget

func main() {

	go evault.StartBackend()
	myApp := app.New()
	myWindow := myApp.NewWindow("Evault")
	dashboardContent := dashboard.CreateDashboard(myWindow)

	go mapview.StartMapServer()
	go mapview.StartCoordinateServer()

	content := container.NewVBox(dashboardContent)
	scrollablecontent := container.NewVScroll(content)
	updateContent := func(newContent fyne.CanvasObject) {
		content.Objects = []fyne.CanvasObject{newContent}
		content.Refresh()
	}
	navbar := widget.NewToolbar(
		widget.NewToolbarAction(theme.HomeIcon(), func() {
			dashboardContent := dashboard.CreateDashboard(myWindow)
			updateContent(dashboardContent)
		}),

		widget.NewToolbarAction(theme.InfoIcon(), func() {
			aboutText := widget.NewLabel("About Evault")
			eWasteText := widget.NewLabel("The need for e-waste collection has become increasingly urgent as technology continues to advance at a rapid pace. With the constant release of new electronic devices, old gadgets like phones, computers, and televisions are often discarded improperly, contributing to significant environmental and health hazards. E-waste contains hazardous materials like lead, mercury, and cadmium, which can leak into soil and water, causing long-term damage. Proper e-waste collection helps ensure these devices are recycled safely, recovering valuable materials like gold, silver, and copper while reducing the strain on natural resources. By establishing efficient e-waste collection systems, we can mitigate pollution, promote sustainable practices, and work toward a cleaner, healthier planet.")
			eWasteText.Wrapping = fyne.TextWrapWord
			eWasteText.Resize(fyne.NewSize(600, 0))
			p2 := widget.NewLabel("As the adoption of electric vehicles (EVs) continues to rise, another growing concern is the e-waste generated by these vehicles. While EVs offer a cleaner alternative to traditional gasoline-powered cars, their batteries and electronic components present new recycling and disposal challenges. The batteries used in electric vehicles, particularly lithium-ion batteries, are essential for their operation but are also complex to recycle. Improper disposal of these batteries can lead to the leakage of hazardous chemicals such as lithium, cobalt, and nickel, which can contaminate soil and water. In addition to the batteries, electronic parts, motors, and other components of EVs also contribute to the growing e-waste problem. As EVs reach the end of their life cycle, there is a pressing need for sustainable recycling solutions and better infrastructure to handle the disposal of these critical components. By addressing these challenges, we can reduce the environmental impact of electric vehicles and ensure that their transition to a greener future does not contribute to new forms of pollution.")
			p2.Wrapping = fyne.TextWrapWord
			p2.Resize(fyne.NewSize(600, 0))
			con := container.NewVBox(
				aboutText,
				widget.NewSeparator(),
				eWasteText,
				widget.NewSeparator(),
				p2,
			)
			updateContent(con)
		}),
	)

	notifiybut = widget.NewButton("Notifications", func() {
		notificationtab := notifymesg.Createnotificationtab(myWindow)
		updateContent(notificationtab)
	})

	sideView := container.NewVBox(
		widget.NewButton("Dashboard", func() {
			dashboardContent := dashboard.CreateDashboard(myWindow)
			updateContent(dashboardContent)
		}),
		widget.NewButton("Add new", func() {
			form := dashboard.Showrequestform(myWindow)
			updateContent(form)
		}),
		widget.NewButton("Settings", func() {
			settingContent := settings.CreateThemeswap(myApp)
			updateContent(settingContent)
		}),
		widget.NewButton("Manage Requests", func() {
			manageTab := managereq.Createmanagetab(myWindow)
			updateContent(manageTab)
		}),
		notifiybut,
	)

	sideMenu := container.NewVScroll(sideView)
	sideMenu.SetMinSize(fyne.NewSize(200, 400))

	mainContent := container.NewHSplit(sideMenu, scrollablecontent)
	mainContent.SetOffset(0.2)

	page := login.CreateLoginPage(myWindow, navbar, mainContent)
	myWindow.SetContent(page)
	myWindow.Resize(fyne.NewSize(1200, 600))

	myWindow.ShowAndRun()

	go mapview.ListenForShutdown()
	go mapview.Listencoords()
}
